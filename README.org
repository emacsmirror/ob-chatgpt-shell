* ob-chatgpt-shell

Evaluate ChatGPT shell text as Emacs org babel blocks

For related packages, see:

- [[https://github.com/xenodium/chatgpt-shell][chatgpt-shell]]: An Emacs shell for OpenAI's ChatGPT.
- [[https://github.com/xenodium/dall-e-shell][dall-e-shell]]: An Emacs shell for OpenAI's DALL-E.
- [[https://github.com/xenodium/ob-dall-e-shell][ob-dall-e-shell]]: Evaluate DALL-E shell blocks in Emacs org babel blocks.
- [[https://github.com/xenodium/shell-maker][shell-maker]]: Create Emacs shells backed by either local or cloud services.

** Support this effort

If you're finding =dall-e-shell= useful, help make the project sustainable and consider âœ¨[[https://github.com/sponsors/xenodium][sponsoring]]âœ¨.

=ob-chatgpt-shell= is in development. Please report issues or send [[https://github.com/xenodium/ob-chatgpt-shell/pulls][pull requests]] for improvements.

** Like this package? Tell me about it ðŸ’™

Finding it useful? Like the package? I'd love to hear from you. Get in touch ([[https://indieweb.social/@xenodium][Mastodon]] / [[https://twitter.com/xenodium][Twitter]] / [[https://www.reddit.com/user/xenodium][Reddit]] / [[mailto:me__AT__xenodium.com][Email]]).

* Setup

Load =(require 'ob-chatgpt-shell)= and invoke =(ob-chatgpt-shell-setup)=.

* Set OpenAI key

See [[https://github.com/xenodium/chatgpt-shell?tab=readme-ov-file#set-openai-key][chatgpt-shell]].

* Usage

#+begin_src org
  ,#+begin_src chatgpt-shell
    Hello
  ,#+end_src

  ,#+RESULTS:
  : Hi there! How can I assist you today?
#+end_src

** :version

Use =:version= to specify "gpt-4", "gpt-3.5-turbo", or something else.

#+begin_src org
  ,#+begin_src chatgpt-shell :version "gpt-4"
   Hello
  ,#+end_src

  ,#+RESULTS:
  Hello! How can I help you today?
#+end_src

** :system

Use =:system= to set the system prompt.

#+begin_src org
  ,#+begin_src chatgpt-shell :system "always respond like a pirate"
    hello
  ,#+end_src

  ,#+RESULTS:
  Ahoy there, me hearty! How be ye today?
#+end_src

** :temperature

Use =:temperature= to set the [[https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature][temperature]] parameter.

#+begin_src org
  ,#+begin_src chatgpt-shell :temperature 0.3
    hello
  ,#+end_src
#+end_src

** :context

Use =:context t= to include all prior context in current buffer.

#+begin_src org
  ,#+begin_src chatgpt-shell
    tell me a random day of the week
  ,#+end_src

  ,#+RESULTS:
  Wednesday

  ,#+begin_src chatgpt-shell :system "always respond like a pirate"
    hello
  ,#+end_src

  ,#+RESULTS:
  Ahoy there, me hearty! How be ye today?

  ,#+begin_src chatgpt-shell :context t
    what was the day you told me and what greeting?
  ,#+end_src

  ,#+RESULTS:
  The day I told you was Wednesday, and the greeting I used was "Ahoy there, me hearty! How be ye today?"
#+end_src

If you'd like to cherrypick which blocks are part of a given context, add
=:context CONTEXT-NAME= to each block where CONTEXT-NAME is any string. When
this form is used only source blocks with same =CONTEXT-NAME= will be included
as opposed to every previous block when using =:context t=.

The example below shows how two different contexts can be interleaved.

#+begin_src org
  ,#+begin_src chatgpt-shell :context shakespeare :system "alway speak like shakespeare"
  How do you do?
  ,#+end_src

  #+RESULTS:
  How dost thou fare?

  ,#+begin_src chatgpt-shell :context robot :system "always speak like a sci fi movie robot"
  How do you do?
  ,#+end_src

  ,#+RESULTS:
  Greetings, human. I am functioning at optimal capacity. How may I assist you in your endeavors today?

  ,#+begin_src chatgpt-shell :context shakespeare
  What did you call me?
  ,#+end_src

  ,#+RESULTS:
  Mine apologies if mine words hath caused confusion. I merely addressed thee as 'sir' or 'madam', a term of respect in the language of the Bard. Pray, how may I assist thee further?
#+end_src

* Support my work

ðŸ‘‰ Find my work useful? [[https://github.com/sponsors/xenodium][Support this work via GitHub Sponsors]] or [[https://apps.apple.com/us/developer/xenodium-ltd/id304568690][buy my iOS apps]].

* My other utilities, packages, apps, writing...

- [[https://xenodium.com/][Blog (xenodium.com)]]
- [[https://lmno.lol/alvaro][Blog (lmno.lol/alvaro)]]
- [[https://plainorg.com][Plain Org]] (iOS)
- [[https://flathabits.com][Flat Habits]] (iOS)
- [[https://apps.apple.com/us/app/scratch/id1671420139][Scratch]] (iOS)
- [[https://github.com/xenodium/macosrec][macosrec]] (macOS)
- [[https://apps.apple.com/us/app/fresh-eyes/id6480411697?mt=12][Fresh Eyes]] (macOS)
- [[https://github.com/xenodium/dwim-shell-command][dwim-shell-command]] (Emacs)
- [[https://github.com/xenodium/company-org-block][company-org-block]] (Emacs)
- [[https://github.com/xenodium/org-block-capf][org-block-capf]] (Emacs)
- [[https://github.com/xenodium/ob-swiftui][ob-swiftui]] (Emacs)
- [[https://github.com/xenodium/chatgpt-shell][chatgpt-shell]] (Emacs)
- [[https://github.com/xenodium/ready-player][ready-player]] (Emacs)
- [[https://github.com/xenodium/sqlite-mode-extras][sqlite-mode-extras]]
- [[https://github.com/xenodium/ob-chatgpt-shell][ob-chatgpt-shell]] (Emacs)
- [[https://github.com/xenodium/dall-e-shell][dall-e-shell]] (Emacs)
- [[https://github.com/xenodium/ob-dall-e-shell][ob-dall-e-shell]] (Emacs)
- [[https://github.com/xenodium/shell-maker][shell-maker]] (Emacs)
